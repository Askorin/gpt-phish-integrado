import os
from langchain.llms import OpenAI
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain
import streamlit as st
from streamlit_gsheets import GSheetsConnection
import pandas as pd
import constants
import react
import time

os.environ["OPENAI_API_KEY"] = st.secrets["openaikey"]
# Page title
#st.set_page_config(page_title='EmailCreator')
#st.title('ProjectP0.1')

# copies 
home_title = "PhishingLab"
home_introduction = "Hola, esta es una aplicaci√≥n de generaci√≥n de correos phishing que te muestra c√≥mo pueden ser los correos fraudulentos que intentan enga√±arte para obtener tus datos personales, financieros o de acceso. Con esta aplicaci√≥n, puedes ver ejemplos de correos phishing que simulan ser de entidades leg√≠timas, como bancos, empresas, organismos p√∫blicos, etc. Solo tienes que introducir los datos que creas que filtras con mayor facilidad y la aplicaci√≥n te mostrar√° un correo falso que podr√≠as recibir en tu bandeja de entrada. Esta aplicaci√≥n utiliza la tecnolog√≠a GPT de OpenAI para crear correos phishing convincentes y peligrosos. √ösala y aprende a identificar y evitar los correos phishing."
home_privacy = "Tu informaci√≥n personal no es almacenada de ning√∫n tipo, apenas generas un correo todo se elimina, asegurando una completa privacidad y anonimato. Esto significa que puedes usar PhishingLab con tranquilidad, sabiendo que tus datos siempre est√°n seguros y protegidos."
home_getstarted = "Revise y acepte nuestros T√©rminos de uso y Pol√≠tica de privacidad, disponibles en nuestra p√°gina de T√©rminos. Al marcar la casilla, confirma que ha le√≠do y aceptado nuestras pol√≠ticas. ¬°Empecemos!"
instrucciones1 = "1-Primero debes marcar qu√© datos son los m√°s probables que filtres con facilidad en internet."
instrucciones2 = "2-Una vez marcada las casillas deber√°s rellenar con los datos de la forma que se muestra en los ejemplos."
instrucciones3 = "3-Ya con todos los datos listos presiona el bot√≥n de generar correo y espera a que se muestre en pantalla."
instrucciones4 = "4-Una vez generado el correo verifica que se genero correctamente, hay ocasiones en las que puede que no se genere el correo de manera correcta, en caso de que no se genere como es deseado vuelve a presionar el bot√≥n de generar correo o intenta usar m√°s datos, hay veces que los datos entregados son muy pocos y no se puede generar un correo consistente. "
instrucciones5 = "5-Ya con el correo generado de manera correcta marca la casilla de ‚ÄúCorreo generado correctamente‚Äù, de esta forma se desplegar√° una ventana con una encuesta para evaluar el contenido del correo y la sensaci√≥n generada."
instrucciones6 = "6- Rellena la encuesta marcando las casillas seg√∫n lo indicado y presiona el bot√≥n de enviar."
instrucciones7 = "7- Una vez ya enviada la encuesta se almacenar√°n los datos para su estudio, muchas gracias por participar."
st.markdown(
    "<style>#MainMenu{visibility:hidden;}</style>",
    unsafe_allow_html=True
)

#st.title(home_title)
st.markdown(f"""# {home_title} <span style=color:#2E9BF5><font size=5>Beta</font></span>""",unsafe_allow_html=True)

st.markdown("""\n""")
st.markdown("#### Saludos")
st.write(home_introduction)

#st.markdown("---")

st.markdown("#### Privacidad")
st.write(home_privacy)

st.markdown("#### Comenzar")
st.write(home_getstarted)
agree = st.checkbox('He le√≠do y acepto las Politicas de Privacidad')
if agree:
    st.write('Perfecto!')
st.markdown("""\n""")
st.markdown("""\n""")

#GSheets connection
conn = st.connection("gsheets", type=GSheetsConnection)
existing_data = conn.read(worksheet="datos", usecols=list(range(5)),ttl=5)
existing_data = existing_data.dropna(how="all")

st.markdown("#### Instrucciones de uso")
st.write(instrucciones1)
st.markdown("""\n""")
st.write(instrucciones2)
st.markdown("""\n""")
st.write(instrucciones3)
st.markdown("""\n""")
st.write(instrucciones4)
st.markdown("""\n""")
st.write(instrucciones5)
st.markdown("""\n""")
st.write(instrucciones6)
st.markdown("""\n""")
st.write(instrucciones7)
st.markdown("""\n""")

# Text input
uso_nombre = st.checkbox('Usar nombre?')
if uso_nombre:
        nombrep = st.text_input(
                "Nombre y Apellidos",
                None,
                key="nombrep",
                placeholder="Ej: Crist√≥bal Gonz√°lez Mu√±oz",
                label_visibility="visible")
else:
        nombrep = ""
        
uso_correo = st.checkbox('Usar correo?')
if uso_correo:
        correop = st.text_input(
                "Correo electr√≥nico",
                None,
                key="correop",
                placeholder="Ej: miguel.soto@gmail.com",
                label_visibility="visible")
else:
        correop = ""

uso_direccion = st.checkbox('Usar Direcci√≥n domiciliaria?')
if uso_direccion:
        direccionp = st.text_input(
                "Direcci√≥n domiciliaria",
                None,
                key="direccionp",
                placeholder="Ej: Av. Col√≥n 1234, Depto. 56, Talcahuano, Regi√≥n del Biob√≠o",
                label_visibility="visible")
else:
        direccionp = ""

uso_nacimiento = st.checkbox('Usar fecha de nacimiento?')
if uso_nacimiento:
        nacimientop = st.text_input(
                "Fecha de nacimiento",
                None,
                key="nacimientop",
                placeholder="Ej: 15 de agosto de 1995",
                label_visibility="visible")
else:
        nacimientop = ""

uso_telefono = st.checkbox('Usar numero de telefono?')
if uso_telefono:
        telefonop = st.text_input(
                "N√∫mero de tel√©fono",
                None,
                key="telefonop",
                placeholder="Ej: +56 9 8765 4321",
                label_visibility="visible")
else:
        telefonop = ""

uso_laboral = st.checkbox('Usar informaci√≥n laboral/ocupaci√≥n?')
if uso_laboral:
        laboralp = st.text_input(
                "Experiencia laboral",
                None,
                key="laboralp",
                placeholder="Ej: Ingeniero civil industrial. 3 a√±os trabajando en una empresa de consultor√≠a en proyectos de optimizaci√≥n de procesos, gesti√≥n de calidad y mejora continua. He participado en diversos proyectos para clientes de distintos rubros, como miner√≠a, energ√≠a, salud y educaci√≥n.",
                label_visibility="visible")
else:
        laboralp = ""

uso_interes = st.checkbox('Usar intereses?')
if uso_interes:
        interesp = st.text_input(
                "Intereses",
                None,
                key="interesp",
                placeholder="Ej: Me gusta leer libros de negocios, innovaci√≥n y desarrollo personal. Disfruto de viajar, conocer nuevas culturas y aprender idiomas. Practico deportes como f√∫tbol, tenis y nataci√≥n.",
                label_visibility="visible")
else:
        interesp = ""

uso_familia = st.checkbox('Usar informaci√≥n familiar?')
if uso_familia:
        familiap = st.text_input(
                "Datos Familiares",
                None,
                key="familp",
                placeholder="Ej: Vivo con mi esposa y 2 hijos...",
                label_visibility="visible")
else:
        familiap = ""
        
# Form to accept user's text input for summarization
result = []
correof = st.form('colecting_form')
encuestaf = st.form("datos_form")
submitted = correof.form_submit_button('Generar correo')
if submitted:
        if agree:
                with st.spinner('Calculating...'):
                        time.sleep(1)
                        response = react.phishing_generator(nombrep,correop,direccionp,nacimientop,telefonop,laboralp,interesp,familiap)
                        result.append(response)
                        encuestaf.info(response)
        else:
                with st.spinner('Calculating...'):
                        time.sleep(1)
                        response="Debes aceptar los t√©rminos y condiciones!"
                        result.append(response)
                        correof.info(response)
                        

                  

        

ej1 = encuestaf.slider('Sensaci√≥n de Autoridad:', 0, 5, 1)
ej2 = encuestaf.slider('Sensaci√≥n de Urgencia:', 0, 5, 1)
ej3 = encuestaf.slider('Sensaci√≥n de Deseo: ', 0, 5, 1)
ej4 = encuestaf.slider('¬øQue tan probable es que creyeras el contenido del correo?', 0, 5, 1)
ej5 = encuestaf.slider('¬øPiensas que esto podr√≠a ser peligroso en un futuro?', 0, 5, 1)


encuesta_lista = st.checkbox('Correo generado correctamente')
if encuesta_lista:
        st.write('ola')
        
submit_button = encuestaf.form_submit_button(label="Enviar") 
                        
if submit_button:
        #crear fila
        ejemplo_data = pd.DataFrame(
                [
                        {
                        "Autoridad": ej1,
                        "Urgencia": ej2,
                        "Deseo": ej3,
                        "CreerCorreo": ej4,
                        "PeligroFuturo": ej5,                  
                        }
                ]
                )
        updated_df = pd.concat([existing_data,ejemplo_data], ignore_index=True)
        #actualizar googlesheets
        conn.update(worksheet="datos", data=updated_df)
        encuestaf.success("Gracias!!", icon="‚úÖ")
if not len(result):
        encuestaf.error("Debes generar el correo!", icon="üö®")
        